
// Переменные параметры и inout
// когда аргумент передается в функцию, внутри функции его нельзя изменять, он является константой
// если мы хотим изменить значение аргумента, явно указываем var
// при этом снаружи функции сохраняется старое значение у аргумента, т.е. мы будем менять не само значение, а копию

// с переменными параметрами мы не можем использовать значения по умолчанию
//func foo(var number:Int) -> Int {
//    
//    number += 1
//    return number
//}

// переменные параметры уберут из Swift 3, правильнее теперь просто создавать переменную
func foo(number:Int) -> Int {
    var innerNumber = number
    innerNumber += 1
    return innerNumber
}



// если хотим менять значения вне функции, то используем inout параметры

func swapTwoInts(inout a:Int, inout _ b:Int) {
    let temp = a
    a = b
    b = temp
}

var a:Int = 10
var b:Int = 50
swapTwoInts(&a, &b)
a
b
